<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<link rel="stylesheet" href="/resources/core.css">
	<script src="https://cdn.socket.io/3.1.3/socket.io.min.js" integrity="sha384-cPwlPLvBTa3sKAgddT6krw0cJat7egBga3DJepJyrLl4Q9/5WLra3rrnMcyTyOnh" crossorigin="anonymous"></script>
	<title>null</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="shortcut icon" href="resources/favicon.ico"/>
	<link rel="manifest" href="resources/pwamanifest.json">
	<style> 
		body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; background-color: #333333	; }
  
		#form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
		#input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem;color:white;background-color: #333333; }
		#input:focus { outline: none; }
		#form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }
  
		#messages { list-style-type: none; margin: 0; padding: 0; color: white }
		#messages > li { padding: 0.5rem 1rem; }
		.offline {background: rgb(0,0,0) !important; color: white}
		.highlight {background: #49443C !important; color: white}
	  </style>
</head>
<body>
	<audio autoplay><source src="/resources/broadcast.wav"></audio>
	<ul id="messages"><li>Connecting to server...</li></ul> <!-- who would block something like this??? -->
	<form id="form" action="">
	  <input id="input" maxlength="1024" autocomplete="off" /><button>Send</button>
	</form>
  </body>
<% if(user) { %>
<script>
var socket = io();

var form = document.getElementById('form');
var input = document.getElementById('input');

form.addEventListener('submit', function(e) {
  e.preventDefault();
  if (input.value == "/notifications") {
	input.value = ''
	Notification.requestPermission();
	return;
  }
  if (input.value) {
	socket.emit('chat message', input.value);
	input.value = '';
  }
});
	socket.on('chat message', function(msg) {
		input.disabled = false;
		var item = document.createElement('li');
		let isMention = false;
		if(msg.message.toLowerCase().includes('@<%= user.username.toLowerCase() %>') || msg.message.includes('@<%= user.id %>')) {
			isMention = true;
			item.classList.add("highlight");
			new Notification(`${msg.user} pinged you`, {body: msg.message});
		}
		item.innerHTML = `<audio autoplay><source src="/resources/${isMention ? "mention" : "message"}.wav"></audio><a href="/profile/${msg.userId}"><p class='user inline'>${msg.user} <span class="text-xs text-gray-400">${msg.userFlags.includes("admin") ? `<img src="/resources/badges/admin.png" width="24px" class="inline"/> ` : ""}${msg.userFlags.includes("bug") ? `<img src="/resources/badges/bug.png" width="24px" class="inline"/> ` : ""}${msg.time ? new Date(msg.time).toLocaleString() : ""}</span></p><p class="text-xs">${msg.userId}</p></p></a><p id="message-content" class="break-words"></p>`;
		item.querySelector("#message-content").textContent = msg.message;
		messages.appendChild(item);
		window.scrollTo(0, document.body.scrollHeight);
	});

	socket.on("system response", (data) => {
		var item = document.createElement('li');
		switch(data.type) {
			case "message":
				item.innerHTML = `<a href="/profile/rickroll"><p class='user text-red-900 font-bold'>System</p></a>${data.data}`;
				break;
			case "list":
				let finalMessage = `Online users: `
				let addedUsers = []
				data.data.users.sort((a, b) => a.name.localeCompare(b.name))
				for(let i = 0; i < data.data.users.length; i++) {
					if(addedUsers.includes(data.data.users[i].id)) continue;
					finalMessage += `<a href="/profile/${data.data.users[i].id}" class="inline-block"><p class='user inline'>${data.data.users[i].name}${data.data.users[i].userFlags.includes("admin") ? ` <img src="/resources/badges/admin.png" width="24px" class="inline"/> ` : ""}${data.data.users[i].userFlags.includes("bug") ? `<img src="/resources/badges/bug.png" width="24px" class="inline"/> ` : ""}</p></a>${i == data.data.users.length - 1 ? data.data.guests != "0" ? `, and ${data.data.guests} guest user${data.data.guests != "1" ? "s" : ""}` : "" : ", "}` // what the dog doin
					addedUsers.push(data.data.users[i].id)
				}
				item.innerHTML = finalMessage
				break;
			case "refresh":
				window.location = window.location;
				break;
			case "logout":
				window.location = "https://null.omg.lol/logout";
				break;
			case "adminmessage":
				item.innerHTML = `<audio autoplay><source src="/resources/broadcast.wav"></audio><a href="/profile/rickroll"><p class='user text-red-900 font-bold'>Announcement!</p></a>${data.data}`;
				break;
		}
		messages.appendChild(item);
		window.scrollTo(0, document.body.scrollHeight);
	});
	socket.on("disconnect", () => {
		var item = document.createElement('li');
		item.classList.add("offline");
		item.innerHTML = `<audio autoplay><source src="/resources/broadcast.wav"></audio><a href="/profile/rickroll"><p class='user text-red-900 font-bold'>System</p></a>Connection lost. Attempting to reconnect...`;
		messages.appendChild(item);
		window.scrollTo(0, document.body.scrollHeight);
		var input = document.querySelector('input');
		input.disabled = true;
	});
	socket.on("connect", () => {
		messages.innerHTML = "";
	});
</script>
<% } else {%>
<script>
	var socket = io();
	
	var form = document.querySelector('form');
	var input = document.querySelector('input');
	var button = document.querySelector('button');

	input.disabled = true;
	input.placeholder = "Click log in (to the right) to participate in null.";
	button.innerHTML = "Log in"
	
	form.addEventListener('submit', function(e) {
		e.preventDefault();
		window.location = '/login';
	});
	
	socket.on('chat message', function(msg) {
		var item = document.createElement('li');
		item.innerHTML = `<audio autoplay><source src="/resources/message.wav"></audio><a href="/profile/${msg.userId}"><p class='user inline'>${msg.user} ${msg.userFlags.includes("admin") ? `<img src="/resources/badges/admin.png" width="24px" class="inline"/> ` : ""}${msg.userFlags.includes("bug") ? `<img src="/resources/badges/bug.png" width="24px" class="inline"/> ` : ""}<span class="text-xs text-gray-400">${msg.time ? new Date(msg.time).toLocaleString() : ""}</span></p><p class="text-xs">${msg.userId}</p></p></a><p id="message-content" class="break-words"></p>`;
		item.querySelector("#message-content").textContent = msg.message;
		messages.appendChild(item);
		window.scrollTo(0, document.body.scrollHeight);
	});

	socket.on("disconnect", () => {
		var item = document.createElement('li');
		item.classList.add("offline");
		item.innerHTML = `<audio autoplay><source src="/resources/broadcast.wav"></audio><a href="/profile/rickroll"><p class='user text-red-900 font-bold'>System</p></a>Connection lost. Attempting to reconnect...`;
		messages.appendChild(item);
		window.scrollTo(0, document.body.scrollHeight);
	});

	socket.on("connect", () => {
		messages.innerHTML = "";
	});
	</script>
<% } %>
</html>
